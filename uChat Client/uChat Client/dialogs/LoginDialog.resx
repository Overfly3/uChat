<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QD4RXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUAAAAB
        AAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAQAAAAcgEyAAIAAAAUAAAAgodpAAQAAAAB
        AAAAlgAAALYASAAAAAEAAABIAAAAAQAAcGFpbnQubmV0IDQuMC41ADIwMTE6MDk6MTQgMjA6NDY6NTYA
        AAKgAgAEAAAAAQAAAMigAwAEAAAAAQAAAMgAAAAAAAAAAwEaAAUAAAABAAAA4AEbAAUAAAABAAAA6AEo
        AAMAAAABAAIAAAAAAAAAAABIAAAAAQAAAEgAAAAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAA
        bW50clJHQiBYWVogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAEAAPbW
        AAEAAAAA0y1IUCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR
        Y3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAU
        Z1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACG
        dmlldwAAA9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgM
        Z1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q
        YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JH
        QiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAAb6IAADj1
        AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMg
        aHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIu
        MSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBE
        ZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAA
        AAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxS
        ZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAA
        AFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAA
        AAAEAAAAAAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCG
        AIsAkACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwEl
        ASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gID
        AgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMt
        AzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSo
        BLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7
        BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq
        CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5
        C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4u
        DkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGM
        EaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVW
        FXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmR
        GbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5A
        HmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNm
        I5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkG
        KTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8k
        L1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXC
        Nf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzj
        PSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SK
        RM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6
        TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1
        VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69
        Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iW
        aOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMB
        c11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4B
        fmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ
        if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJ
        ljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKW
        owajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AA
        sHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74K
        voS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1
        zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF
        3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv7
        7IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY
        /Sn9uv5L/tz/bf///9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggH
        BwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAZABkAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A/fDV9Xg0OwkuLhhHFGMk+vsPc157rXxXuL+RhbFbWHOB3Yj3P+FUfj14tMet
        2unK2I4YxO4/vMxIGfoB+teenxDnutfO5hmjjUdKOljxcbmDjP2ceh3x8dXZP/H1N/32aT/hOLr/AJ/J
        v+/hrgW17d/FTm17Z6H61539pS7nD9cfc73/AITm6YcXcx/7aGhvG90AD9qnwenzmuB/t/Pf9aBr27/9
        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
        NYlVVVVXHAAwBRRQBJRRRQB//9k=
</value>
  </data>
</root>